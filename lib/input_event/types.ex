# SPDX-FileCopyrightText: 2016 Justin Schneck
# SPDX-FileCopyrightText: 2018 Frank Hunleth
#
# SPDX-License-Identifier: Apache-2.0
#
defmodule InputEvent.Types do
  @moduledoc false

  # See https://elixir.bootlin.com/linux/latest/source/include/uapi/linux/input-event-codes.h for codes.
  @event_types [
    ev_syn: 0x00,
    ev_key: 0x01,
    ev_rel: 0x02,
    ev_abs: 0x03,
    ev_msc: 0x04,
    ev_sw: 0x05,
    ev_led: 0x11,
    ev_snd: 0x12,
    ev_rep: 0x14,
    ev_ff: 0x15,
    ev_pwr: 0x16,
    ev_ff_status: 0x17
  ]

  @syn_events [
    syn_report: 0,
    syn_config: 1,
    syn_mt_report: 2,
    syn_dropped: 3
  ]
  @key_events [
    key_reserved: 0,
    key_esc: 1,
    key_1: 2,
    key_2: 3,
    key_3: 4,
    key_4: 5,
    key_5: 6,
    key_6: 7,
    key_7: 8,
    key_8: 9,
    key_9: 10,
    key_0: 11,
    key_minus: 12,
    key_equal: 13,
    key_backspace: 14,
    key_tab: 15,
    key_q: 16,
    key_w: 17,
    key_e: 18,
    key_r: 19,
    key_t: 20,
    key_y: 21,
    key_u: 22,
    key_i: 23,
    key_o: 24,
    key_p: 25,
    key_leftbrace: 26,
    key_rightbrace: 27,
    key_enter: 28,
    key_leftctrl: 29,
    key_a: 30,
    key_s: 31,
    key_d: 32,
    key_f: 33,
    key_g: 34,
    key_h: 35,
    key_j: 36,
    key_k: 37,
    key_l: 38,
    key_semicolon: 39,
    key_apostrophe: 40,
    key_grave: 41,
    key_leftshift: 42,
    key_backslash: 43,
    key_z: 44,
    key_x: 45,
    key_c: 46,
    key_v: 47,
    key_b: 48,
    key_n: 49,
    key_m: 50,
    key_comma: 51,
    key_dot: 52,
    key_slash: 53,
    key_rightshift: 54,
    key_kpasterisk: 55,
    key_leftalt: 56,
    key_space: 57,
    key_capslock: 58,
    key_f1: 59,
    key_f2: 60,
    key_f3: 61,
    key_f4: 62,
    key_f5: 63,
    key_f6: 64,
    key_f7: 65,
    key_f8: 66,
    key_f9: 67,
    key_f10: 68,
    key_numlock: 69,
    key_scrolllock: 70,
    key_kp7: 71,
    key_kp8: 72,
    key_kp9: 73,
    key_kpminus: 74,
    key_kp4: 75,
    key_kp5: 76,
    key_kp6: 77,
    key_kpplus: 78,
    key_kp1: 79,
    key_kp2: 80,
    key_kp3: 81,
    key_kp0: 82,
    key_kpdot: 83,
    key_zenkakuhankaku: 85,
    key_102nd: 86,
    key_f11: 87,
    key_f12: 88,
    key_ro: 89,
    key_katakana: 90,
    key_hiragana: 91,
    key_henkan: 92,
    key_katakanahiragana: 93,
    key_muhenkan: 94,
    key_kpjpcomma: 95,
    key_kpenter: 96,
    key_rightctrl: 97,
    key_kpslash: 98,
    key_sysrq: 99,
    key_rightalt: 100,
    key_linefeed: 101,
    key_home: 102,
    key_up: 103,
    key_pageup: 104,
    key_left: 105,
    key_right: 106,
    key_end: 107,
    key_down: 108,
    key_pagedown: 109,
    key_insert: 110,
    key_delete: 111,
    key_macro: 112,
    key_mute: 113,
    key_volumedown: 114,
    key_volumeup: 115,
    key_power: 116,
    key_kpequal: 117,
    key_kpplusminus: 118,
    key_pause: 119,
    key_scale: 120,
    key_kpcomma: 121,
    key_hangeul: 122,
    key_hanja: 123,
    key_yen: 124,
    key_leftmeta: 125,
    key_rightmeta: 126,
    key_compose: 127,
    key_stop: 128,
    key_again: 129,
    key_props: 130,
    key_undo: 131,
    key_front: 132,
    key_copy: 133,
    key_open: 134,
    key_paste: 135,
    key_find: 136,
    key_cut: 137,
    key_help: 138,
    key_menu: 139,
    key_calc: 140,
    key_setup: 141,
    key_sleep: 142,
    key_wakeup: 143,
    key_file: 144,
    key_sendfile: 145,
    key_deletefile: 146,
    key_xfer: 147,
    key_prog1: 148,
    key_prog2: 149,
    key_www: 150,
    key_msdos: 151,
    # key_coffee: 152,
    key_screenlock: 152,
    # key_rotate_display: 153,
    key_direction: 153,
    key_cyclewindows: 154,
    key_mail: 155,
    key_bookmarks: 156,
    key_computer: 157,
    key_back: 158,
    key_forward: 159,
    key_closecd: 160,
    key_ejectcd: 161,
    key_ejectclosecd: 162,
    key_nextsong: 163,
    key_playpause: 164,
    key_previoussong: 165,
    key_stopcd: 166,
    key_record: 167,
    key_rewind: 168,
    key_phone: 169,
    key_iso: 170,
    key_config: 171,
    key_homepage: 172,
    key_refresh: 173,
    key_exit: 174,
    key_move: 175,
    key_edit: 176,
    key_scrollup: 177,
    key_scrolldown: 178,
    key_kpleftparen: 179,
    key_kprightparen: 180,
    key_new: 181,
    key_redo: 182,
    key_f13: 183,
    key_f14: 184,
    key_f15: 185,
    key_f16: 186,
    key_f17: 187,
    key_f18: 188,
    key_f19: 189,
    key_f20: 190,
    key_f21: 191,
    key_f22: 192,
    key_f23: 193,
    key_f24: 194,
    key_playcd: 200,
    key_pausecd: 201,
    key_prog3: 202,
    key_prog4: 203,
    key_dashboard: 204,
    key_suspend: 205,
    key_close: 206,
    key_play: 207,
    key_fastforward: 208,
    key_bassboost: 209,
    key_print: 210,
    key_hp: 211,
    key_camera: 212,
    key_sound: 213,
    key_question: 214,
    key_email: 215,
    key_chat: 216,
    key_search: 217,
    key_connect: 218,
    key_finance: 219,
    key_sport: 220,
    key_shop: 221,
    key_alterase: 222,
    key_cancel: 223,
    key_brightnessdown: 224,
    key_brightnessup: 225,
    key_media: 226,
    key_switchvideomode: 227,
    key_kbdillumtoggle: 228,
    key_kbdillumdown: 229,
    key_kbdillumup: 230,
    key_send: 231,
    key_reply: 232,
    key_forwardmail: 233,
    key_save: 234,
    key_documents: 235,
    key_battery: 236,
    key_bluetooth: 237,
    key_wlan: 238,
    key_uwb: 239,
    key_unknown: 240,
    key_video_next: 241,
    key_video_prev: 242,
    key_brightness_cycle: 243,
    key_brightness_auto: 244,
    # key_brightness_zero: 244,
    key_display_off: 245,
    key_wwan: 246,
    # key_wimax: 246,
    key_rfkill: 247,
    key_micmute: 248,
    # btn_misc: 0x100,
    btn_0: 0x100,
    btn_1: 0x101,
    btn_2: 0x102,
    btn_3: 0x103,
    btn_4: 0x104,
    btn_5: 0x105,
    btn_6: 0x106,
    btn_7: 0x107,
    btn_8: 0x108,
    btn_9: 0x109,
    # btn_mouse: 0x110,
    btn_left: 0x110,
    btn_right: 0x111,
    btn_middle: 0x112,
    btn_side: 0x113,
    btn_extra: 0x114,
    btn_forward: 0x115,
    btn_back: 0x116,
    btn_task: 0x117,
    # btn_joystick: 0x120,
    btn_trigger: 0x120,
    btn_thumb: 0x121,
    btn_thumb2: 0x122,
    btn_top: 0x123,
    btn_top2: 0x124,
    btn_pinkie: 0x125,
    btn_base: 0x126,
    btn_base2: 0x127,
    btn_base3: 0x128,
    btn_base4: 0x129,
    btn_base5: 0x12A,
    btn_base6: 0x12B,
    btn_dead: 0x12F,
    # btn_gamepad: 0x130,
    # btn_south: 0x130,
    btn_a: 0x130,
    # btn_east: 0x131,
    btn_b: 0x131,
    btn_c: 0x132,
    # btn_north: 0x133,
    btn_x: 0x133,
    # btn_west: 0x134,
    btn_y: 0x134,
    btn_z: 0x135,
    btn_tl: 0x136,
    btn_tr: 0x137,
    btn_tl2: 0x138,
    btn_tr2: 0x139,
    btn_select: 0x13A,
    btn_start: 0x13B,
    btn_mode: 0x13C,
    btn_thumbl: 0x13D,
    btn_thumbr: 0x13E,
    # btn_digi: 0x140,
    btn_tool_pen: 0x140,
    btn_tool_rubber: 0x141,
    btn_tool_brush: 0x142,
    btn_tool_pencil: 0x143,
    btn_tool_airbrush: 0x144,
    btn_tool_finger: 0x145,
    btn_tool_mouse: 0x146,
    btn_tool_lens: 0x147,
    btn_tool_quinttap: 0x148,
    btn_touch: 0x14A,
    btn_stylus: 0x14B,
    btn_stylus2: 0x14C,
    btn_tool_doubletap: 0x14D,
    btn_tool_tripletap: 0x14E,
    btn_tool_quadtap: 0x14F,
    btn_wheel: 0x150,
    # btn_gear_down: 0x150,
    btn_gear_up: 0x151,
    key_ok: 0x160,
    key_select: 0x161,
    key_goto: 0x162,
    key_clear: 0x163,
    key_power2: 0x164,
    key_option: 0x165,
    key_info: 0x166,
    key_time: 0x167,
    key_vendor: 0x168,
    key_archive: 0x169,
    key_program: 0x16A,
    key_channel: 0x16B,
    key_favorites: 0x16C,
    key_epg: 0x16D,
    key_pvr: 0x16E,
    key_mhp: 0x16F,
    key_language: 0x170,
    key_title: 0x171,
    key_subtitle: 0x172,
    key_angle: 0x173,
    key_zoom: 0x174,
    key_mode: 0x175,
    key_keyboard: 0x176,
    key_screen: 0x177,
    key_pc: 0x178,
    key_tv: 0x179,
    key_tv2: 0x17A,
    key_vcr: 0x17B,
    key_vcr2: 0x17C,
    key_sat: 0x17D,
    key_sat2: 0x17E,
    key_cd: 0x17F,
    key_tape: 0x180,
    key_radio: 0x181,
    key_tuner: 0x182,
    key_player: 0x183,
    key_text: 0x184,
    key_dvd: 0x185,
    key_aux: 0x186,
    key_mp3: 0x187,
    key_audio: 0x188,
    key_video: 0x189,
    key_directory: 0x18A,
    key_list: 0x18B,
    key_memo: 0x18C,
    key_calendar: 0x18D,
    key_red: 0x18E,
    key_green: 0x18F,
    key_yellow: 0x190,
    key_blue: 0x191,
    key_channelup: 0x192,
    key_channeldown: 0x193,
    key_first: 0x194,
    key_last: 0x195,
    key_ab: 0x196,
    key_next: 0x197,
    key_restart: 0x198,
    key_slow: 0x199,
    key_shuffle: 0x19A,
    key_break: 0x19B,
    key_previous: 0x19C,
    key_digits: 0x19D,
    key_teen: 0x19E,
    key_twen: 0x19F,
    key_videophone: 0x1A0,
    key_games: 0x1A1,
    key_zoomin: 0x1A2,
    key_zoomout: 0x1A3,
    key_zoomreset: 0x1A4,
    key_wordprocessor: 0x1A5,
    key_editor: 0x1A6,
    key_spreadsheet: 0x1A7,
    key_graphicseditor: 0x1A8,
    key_presentation: 0x1A9,
    key_database: 0x1AA,
    key_news: 0x1AB,
    key_voicemail: 0x1AC,
    key_addressbook: 0x1AD,
    key_messenger: 0x1AE,
    # key_displaytoggle: 0x1AF,
    key_brightness_toggle: 0x1AF,
    key_spellcheck: 0x1B0,
    key_logoff: 0x1B1,
    key_dollar: 0x1B2,
    key_euro: 0x1B3,
    key_frameback: 0x1B4,
    key_frameforward: 0x1B5,
    key_context_menu: 0x1B6,
    key_media_repeat: 0x1B7,
    key_10channelsup: 0x1B8,
    key_10channelsdown: 0x1B9,
    key_images: 0x1BA,
    key_del_eol: 0x1C0,
    key_del_eos: 0x1C1,
    key_ins_line: 0x1C2,
    key_del_line: 0x1C3,
    key_fn: 0x1D0,
    key_fn_esc: 0x1D1,
    key_fn_f1: 0x1D2,
    key_fn_f2: 0x1D3,
    key_fn_f3: 0x1D4,
    key_fn_f4: 0x1D5,
    key_fn_f5: 0x1D6,
    key_fn_f6: 0x1D7,
    key_fn_f7: 0x1D8,
    key_fn_f8: 0x1D9,
    key_fn_f9: 0x1DA,
    key_fn_f10: 0x1DB,
    key_fn_f11: 0x1DC,
    key_fn_f12: 0x1DD,
    key_fn_1: 0x1DE,
    key_fn_2: 0x1DF,
    key_fn_d: 0x1E0,
    key_fn_e: 0x1E1,
    key_fn_f: 0x1E2,
    key_fn_s: 0x1E3,
    key_fn_b: 0x1E4,
    key_brl_dot1: 0x1F1,
    key_brl_dot2: 0x1F2,
    key_brl_dot3: 0x1F3,
    key_brl_dot4: 0x1F4,
    key_brl_dot5: 0x1F5,
    key_brl_dot6: 0x1F6,
    key_brl_dot7: 0x1F7,
    key_brl_dot8: 0x1F8,
    key_brl_dot9: 0x1F9,
    key_brl_dot10: 0x1FA,
    key_numeric_0: 0x200,
    key_numeric_1: 0x201,
    key_numeric_2: 0x202,
    key_numeric_3: 0x203,
    key_numeric_4: 0x204,
    key_numeric_5: 0x205,
    key_numeric_6: 0x206,
    key_numeric_7: 0x207,
    key_numeric_8: 0x208,
    key_numeric_9: 0x209,
    key_numeric_star: 0x20A,
    key_numeric_pound: 0x20B,
    key_numeric_a: 0x20C,
    key_numeric_b: 0x20D,
    key_numeric_c: 0x20E,
    key_numeric_d: 0x20F,
    key_camera_focus: 0x210,
    key_wps_button: 0x211,
    key_touchpad_toggle: 0x212,
    key_touchpad_on: 0x213,
    key_touchpad_off: 0x214,
    key_camera_zoomin: 0x215,
    key_camera_zoomout: 0x216,
    key_camera_up: 0x217,
    key_camera_down: 0x218,
    key_camera_left: 0x219,
    key_camera_right: 0x21A,
    key_attendant_on: 0x21B,
    key_attendant_off: 0x21C,
    key_attendant_toggle: 0x21D,
    key_lights_toggle: 0x21E,
    btn_dpad_up: 0x220,
    btn_dpad_down: 0x221,
    btn_dpad_left: 0x222,
    btn_dpad_right: 0x223,
    key_als_toggle: 0x230,
    key_buttonconfig: 0x240,
    key_taskmanager: 0x241,
    key_journal: 0x242,
    key_controlpanel: 0x243,
    key_appselect: 0x244,
    key_screensaver: 0x245,
    key_voicecommand: 0x246,
    key_brightness_min: 0x250,
    key_brightness_max: 0x251,
    key_kbdinputassist_prev: 0x260,
    key_kbdinputassist_next: 0x261,
    key_kbdinputassist_prevgroup: 0x262,
    key_kbdinputassist_nextgroup: 0x263,
    key_kbdinputassist_accept: 0x264,
    key_kbdinputassist_cancel: 0x265,
    key_right_up: 0x266,
    key_right_down: 0x267,
    key_left_up: 0x268,
    key_left_down: 0x269,
    key_root_menu: 0x26A,
    key_media_top_menu: 0x26B,
    key_numeric_11: 0x26C,
    key_numeric_12: 0x26D,
    key_audio_desc: 0x26E,
    key_3d_mode: 0x26F,
    key_next_favorite: 0x270,
    key_stop_record: 0x271,
    key_pause_record: 0x272,
    key_vod: 0x273,
    key_unmute: 0x274,
    key_fastreverse: 0x275,
    key_slowreverse: 0x276,
    # key_data: 0x275,
    # btn_trigger_happy: 0x2C0,
    btn_trigger_happy1: 0x2C0,
    btn_trigger_happy2: 0x2C1,
    btn_trigger_happy3: 0x2C2,
    btn_trigger_happy4: 0x2C3,
    btn_trigger_happy5: 0x2C4,
    btn_trigger_happy6: 0x2C5,
    btn_trigger_happy7: 0x2C6,
    btn_trigger_happy8: 0x2C7,
    btn_trigger_happy9: 0x2C8,
    btn_trigger_happy10: 0x2C9,
    btn_trigger_happy11: 0x2CA,
    btn_trigger_happy12: 0x2CB,
    btn_trigger_happy13: 0x2CC,
    btn_trigger_happy14: 0x2CD,
    btn_trigger_happy15: 0x2CE,
    btn_trigger_happy16: 0x2CF,
    btn_trigger_happy17: 0x2D0,
    btn_trigger_happy18: 0x2D1,
    btn_trigger_happy19: 0x2D2,
    btn_trigger_happy20: 0x2D3,
    btn_trigger_happy21: 0x2D4,
    btn_trigger_happy22: 0x2D5,
    btn_trigger_happy23: 0x2D6,
    btn_trigger_happy24: 0x2D7,
    btn_trigger_happy25: 0x2D8,
    btn_trigger_happy26: 0x2D9,
    btn_trigger_happy27: 0x2DA,
    btn_trigger_happy28: 0x2DB,
    btn_trigger_happy29: 0x2DC,
    btn_trigger_happy30: 0x2DD,
    btn_trigger_happy31: 0x2DE,
    btn_trigger_happy32: 0x2DF,
    btn_trigger_happy33: 0x2E0,
    btn_trigger_happy34: 0x2E1,
    btn_trigger_happy35: 0x2E2,
    btn_trigger_happy36: 0x2E3,
    btn_trigger_happy37: 0x2E4,
    btn_trigger_happy38: 0x2E5,
    btn_trigger_happy39: 0x2E6,
    btn_trigger_happy40: 0x2E7
  ]

  @rel_events [
    rel_x: 0,
    rel_y: 1,
    rel_z: 2,
    rel_rx: 3,
    rel_ry: 4,
    rel_rz: 5,
    rel_hwheel: 6,
    rel_dial: 7,
    rel_wheel: 8,
    rel_misc: 9
  ]

  @abs_events [
    abs_x: 0x00,
    abs_y: 0x01,
    abs_z: 0x02,
    abs_rx: 0x03,
    abs_ry: 0x04,
    abs_rz: 0x05,
    abs_throttle: 0x06,
    abs_rudder: 0x07,
    abs_wheel: 0x08,
    abs_gas: 0x09,
    abs_brake: 0x0A,
    abs_hat0x: 0x10,
    abs_hat0y: 0x11,
    abs_hat1x: 0x12,
    abs_hat1y: 0x13,
    abs_hat2x: 0x14,
    abs_hat2y: 0x15,
    abs_hat3x: 0x16,
    abs_hat3y: 0x17,
    abs_pressure: 0x18,
    abs_distance: 0x19,
    abs_tilt_x: 0x1A,
    abs_tilt_y: 0x1B,
    abs_tool_width: 0x1C,
    abs_volume: 0x20,
    abs_misc: 0x28,
    abs_mt_slot: 0x2F,
    abs_mt_touch_major: 0x30,
    abs_mt_touch_minor: 0x31,
    abs_mt_width_major: 0x32,
    abs_mt_width_minor: 0x33,
    abs_mt_orientation: 0x34,
    abs_mt_position_x: 0x35,
    abs_mt_position_y: 0x36,
    abs_mt_tool_type: 0x37,
    abs_mt_blob_id: 0x38,
    abs_mt_tracking_id: 0x39,
    abs_mt_pressure: 0x3A,
    abs_mt_distance: 0x3B,
    abs_mt_tool_x: 0x3C,
    abs_mt_tool_y: 0x3D
  ]

  @sw_events [
    sw_lid: 0x00,
    sw_tablet_mode: 0x01,
    sw_headphone_insert: 0x02,
    sw_rfkill_all: 0x03,
    # sw_radio: 0x03,
    sw_microphone_insert: 0x04,
    sw_dock: 0x05,
    sw_lineout_insert: 0x06,
    sw_jack_physical_insert: 0x07,
    sw_videoout_insert: 0x08,
    sw_camera_lens_cover: 0x09,
    sw_keypad_slide: 0x0A,
    sw_front_proximity: 0x0B,
    sw_rotate_lock: 0x0C,
    sw_linein_insert: 0x0D,
    sw_mute_device: 0x0E
  ]

  @msc_events [
    msc_serial: 0x00,
    msc_pulseled: 0x01,
    msc_gesture: 0x02,
    msc_raw: 0x03,
    msc_scan: 0x04,
    msc_timestamp: 0x05
  ]

  @led_events [
    led_numl: 0x00,
    led_capsl: 0x01,
    led_scrolll: 0x02,
    led_compose: 0x03,
    led_kana: 0x04,
    led_sleep: 0x05,
    led_suspend: 0x06,
    led_mute: 0x07,
    led_misc: 0x08,
    led_mail: 0x09,
    led_charging: 0x0A
  ]

  @rep_events [
    rep_delay: 0x00,
    rep_period: 0x01
  ]

  @snd_events [
    snd_click: 0x00,
    snd_bell: 0x01,
    snd_tone: 0x02
  ]

  @type_event [
    ev_syn: @syn_events,
    ev_key: @key_events,
    ev_rel: @rel_events,
    ev_abs: @abs_events,
    ev_msc: @msc_events,
    ev_sw: @sw_events,
    ev_led: @led_events,
    ev_snd: @snd_events,
    ev_rep: @rep_events,
    ev_ff: [],
    ev_pwr: [],
    ev_ff_status: []
  ]

  @doc """
  Decode the {type, code, value} tuple coming from the Linux input system.
  """
  @spec decode(InputEvent.type(), InputEvent.code_number(), InputEvent.value()) ::
          {InputEvent.type(), InputEvent.code(), InputEvent.value()}

  # Use Elixir's pattern matching to create a function for all of the known
  # possibilities and functions to handle unknown values as best as possible.
  Enum.each(@type_event, fn {type, events} ->
    type_value = Keyword.get(@event_types, type)

    Enum.each(events, fn {code, code_value} ->
      def decode(unquote(type_value), unquote(code_value), value),
        do: {unquote(type), unquote(code), value}
    end)

    def decode(unquote(type_value), unknown_code, value), do: {unquote(type), unknown_code, value}
  end)

  def decode(unknown_type, unknown_code, value), do: {unknown_type, unknown_code, value}

  @doc """
  Convert a type to it's enumerated form if possible
  """
  @spec decode_type(InputEvent.type_number()) :: InputEvent.type()
  def decode_type(type) do
    {result_type, _code, _value} = decode(type, 0, 0)
    result_type
  end

  @doc """
  Convert a code to it's enumerated form if possible
  """
  @spec decode_code(InputEvent.type(), InputEvent.code_number()) :: InputEvent.code()
  def decode_code(type, code) do
    {_result_type, result_code, _value} = decode(type, code, 0)
    result_code
  end
end
